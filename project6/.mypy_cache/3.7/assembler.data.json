{".class": "MypyFile", "_fullname": "assembler", "is_partial_stub_package": false, "is_stub": false, "names": {".class": "SymbolTable", "AInstruction": {".class": "SymbolTableNode", "cross_ref": "instruction.AInstruction", "kind": "Gdef"}, "BLOCK_COMMENT_END_DELIMITER": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "assembler.BLOCK_COMMENT_END_DELIMITER", "name": "BLOCK_COMMENT_END_DELIMITER", "type": "builtins.str"}}, "BLOCK_COMMENT_START_DELIMITER": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "assembler.BLOCK_COMMENT_START_DELIMITER", "name": "BLOCK_COMMENT_START_DELIMITER", "type": "builtins.str"}}, "Dict": {".class": "SymbolTableNode", "cross_ref": "typing.Dict", "kind": "Gdef"}, "Instruction": {".class": "SymbolTableNode", "cross_ref": "instruction.Instruction", "kind": "Gdef"}, "Iterator": {".class": "SymbolTableNode", "cross_ref": "typing.Iterator", "kind": "Gdef"}, "LINE_COMMENT_DELIMITER": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "assembler.LINE_COMMENT_DELIMITER", "name": "LINE_COMMENT_DELIMITER", "type": "builtins.str"}}, "Label": {".class": "SymbolTableNode", "cross_ref": "instruction.Label", "kind": "Gdef"}, "Path": {".class": "SymbolTableNode", "cross_ref": "pathlib.Path", "kind": "Gdef"}, "Symbol": {".class": "SymbolTableNode", "cross_ref": "instruction.Symbol", "kind": "Gdef"}, "SymbolTable": {".class": "SymbolTableNode", "cross_ref": "symboltable.SymbolTable", "kind": "Gdef"}, "Tuple": {".class": "SymbolTableNode", "cross_ref": "typing.Tuple", "kind": "Gdef"}, "__doc__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "assembler.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__file__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "assembler.__file__", "name": "__file__", "type": "builtins.str"}}, "__name__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "assembler.__name__", "name": "__name__", "type": "builtins.str"}}, "__package__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "assembler.__package__", "name": "__package__", "type": "builtins.str"}}, "argparse": {".class": "SymbolTableNode", "cross_ref": "argparse", "kind": "Gdef"}, "main": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["input_path", "output_path"], "flags": [], "fullname": "assembler.main", "name": "main", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["input_path", "output_path"], "arg_types": ["pathlib.Path", "pathlib.Path"], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "main", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}, "parse_args": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "arg_kinds": [], "arg_names": [], "flags": [], "fullname": "assembler.parse_args", "name": "parse_args", "type": {".class": "CallableType", "arg_kinds": [], "arg_names": [], "arg_types": [], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "parse_args", "ret_type": {".class": "TupleType", "implicit": false, "items": ["pathlib.Path", "pathlib.Path"], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}, "variables": []}}}, "populate_table": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["table", "instructions"], "flags": ["is_generator"], "fullname": "assembler.populate_table", "name": "populate_table", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["table", "instructions"], "arg_types": ["symboltable.SymbolTable", {".class": "Instance", "args": ["builtins.str"], "type_ref": "typing.Iterator"}], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "populate_table", "ret_type": {".class": "Instance", "args": ["instruction.Instruction"], "type_ref": "typing.Iterator"}, "variables": []}}}, "re": {".class": "SymbolTableNode", "cross_ref": "re", "kind": "Gdef"}, "strip_whitespace": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["input_file"], "flags": ["is_generator"], "fullname": "assembler.strip_whitespace", "name": "strip_whitespace", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["input_file"], "arg_types": [{".class": "Instance", "args": ["builtins.str"], "type_ref": "typing.Iterator"}], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "strip_whitespace", "ret_type": {".class": "Instance", "args": ["builtins.str"], "type_ref": "typing.Iterator"}, "variables": []}}}, "sys": {".class": "SymbolTableNode", "cross_ref": "sys", "kind": "Gdef"}, "translate_symbols": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["table", "instructions"], "flags": ["is_generator"], "fullname": "assembler.translate_symbols", "name": "translate_symbols", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["table", "instructions"], "arg_types": ["symboltable.SymbolTable", {".class": "Instance", "args": ["instruction.Instruction"], "type_ref": "typing.Iterator"}], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "translate_symbols", "ret_type": {".class": "Instance", "args": ["instruction.Instruction"], "type_ref": "typing.Iterator"}, "variables": []}}}}, "path": "src/assembler.py"}